(5) Што е HTTP?
- HTTP е кратенка за HyperTextTransferProtocol, кој исто така е наречен и User-friendly протокол 
по кој се обработуваат податоците на интернетот, работи на седмото ниво на OSI референтниот модел, односно на апликациското ниво.
(5) Што е клиент - сервер модел?
- Овој модел претставува поврзување и размена на податоци помеѓу клиентот и серверот, односто клиентот испраќа барање до серверот за некои ресурси,
кои серверот му ги враќа на клиентот според неговото барање.
(8) Какви пораки се испраќаат преку HTTP помеѓу клиентот и серверот?
- Типот на пораките кои се користат меѓу клиентот и серверот при користење на HTTP протоколот може да бидат request и response, request-от се испраќа од клиентот кон серверот,
а response-от е она што го добива клиентот од серверот. И response-от и request-от имаат, заглавје или Header, тело или body.
(8) Какви HTTP методи постојат и за што се користат?
- Постојат повеќе методи на HTTP протоколот, а најбитни се: GET, POST, PUT, PATCH, DELETE
(8) Што е Node.js, а што Express.js?
- Node.js е runtime кој ни овозможува да работиме на javascript код, без потреба од browser, директно во нашиот терминал, за помош при правење на backend. 
А Express.js е модул кој може да се вгради во нашата Node.js апликација со цел да го олесни користењето на HTTP протоколот.
(10) Што се рути?
- Рутите ни претставуваат пат до одреден веб сервис или нешто што треба да се изврши кога во request-от ќе биде зададена одредена рута или патека
(10) Што е MVC архитектура и што што е обврската на нејзините составни делови?
- MVC е кратенка за model-view-controller, односно model ни служи за дефинирање на структурите на податоците и како тие да се обработат,
view ни користи за да можеме на веб да го претставиме она што треба да се гледа кај клиентот, односно frontend-от, а controller ни служи за handler-и, односно како апликацијата
да имплементира промени во моделот. 
(10) Што се модули и какви типови на модули има? Објаснете ја разликата меѓу нив.
- Модули се веќе направени апликации, нешто слично на библиотеки, кои ни овозможуваат полесно имплементирање на нештата во нашите апликации и ни овозможуваат кодот да ни биде читлив. 
Постојат core-модули, локални-модули и Third-party-модули. Core модулите се интегрирани во самиот node, локалните модули ги правиме ние и живеат на нашата локална машина, а 
Third-party модулите се направени од страна на некој друг и published на npm од нивна страна за да може јавноста да ги користи.
(12) Што е веб сервис? Дадете пример за еден веб сервис.
- Веб сервис е дел од целосната апликација, односно може да биде како еден модул од неа, кој служи за одредена услуга наменета за клиентот. Пример за веб сервис може да биде
auth сервис за автентикација на клиентот.
(12) Објаснете што е и како функционира JWT автентикација?
- JWT или json web token е string од енкриптирани податоци за корисникот, со кој тој се автентицира на сајтот, енкрипцијата се врши со помош на secret.
(12) Што е MongoDB? Објаснете накратко за каков софтвер станува збор.
- MongoDB е платформа за датабази, која ни овозможуца да користиме query за навигација и користење на одредени документи од датабазата. Секој корисник има свој cluster-и ово кои ги чува своите датабази.
Една датабаза може да има повеќе sub-folder-и во кои се чуваат документи однсно да податоци.